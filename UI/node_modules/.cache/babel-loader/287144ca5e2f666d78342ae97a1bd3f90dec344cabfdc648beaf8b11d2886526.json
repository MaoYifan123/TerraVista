{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { login } from '@/api/auth';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nexport default {\n  name: 'Login',\n  setup() {\n    const router = useRouter();\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loading = ref(false);\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      try {\n        loading.value = true;\n        await login(loginForm.username, loginForm.password);\n        ElMessage.success('登录成功');\n        router.push('/');\n      } catch (error) {\n        ElMessage.error(error.response?.data?.error || '登录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      loginForm,\n      rules,\n      loading,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","login","ElMessage","User","Lock","name","setup","router","loginForm","username","password","loading","rules","required","message","trigger","handleLogin","value","success","push","error","response","data"],"sources":["C:\\Users\\35026\\IdeaProjects\\SpringVue\\UI\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>登录</h2>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"用户名\">\r\n            <template #prefix>\r\n              <el-icon><User /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"密码\">\r\n            <template #prefix>\r\n              <el-icon><Lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\" style=\"width: 100%\">\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"text\" @click=\"$router.push('/register')\">还没有账号？立即注册</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { login } from '@/api/auth'\r\nimport { ElMessage } from 'element-plus'\r\nimport { User, Lock } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter()\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n    const loading = ref(false)\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        loading.value = true\r\n        await login(loginForm.username, loginForm.password)\r\n        ElMessage.success('登录成功')\r\n        router.push('/')\r\n      } catch (error) {\r\n        ElMessage.error(error.response?.data?.error || '登录失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      rules,\r\n      loading,\r\n      handleLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n</style> "],"mappings":";AAiCA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,KAAI,QAAS,YAAW;AACjC,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,IAAI,EAAEC,IAAG,QAAS,yBAAwB;AAEnD,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIP,SAAS,CAAC;IACzB,MAAMQ,SAAQ,GAAIT,QAAQ,CAAC;MACzBU,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IACD,MAAMC,OAAM,GAAIb,GAAG,CAAC,KAAK;IAEzB,MAAMc,KAAI,GAAI;MACZH,QAAQ,EAAE,CACR;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,EACtD;MACDL,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO;IAExD;IAEA,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFL,OAAO,CAACM,KAAI,GAAI,IAAG;QACnB,MAAMhB,KAAK,CAACO,SAAS,CAACC,QAAQ,EAAED,SAAS,CAACE,QAAQ;QAClDR,SAAS,CAACgB,OAAO,CAAC,MAAM;QACxBX,MAAM,CAACY,IAAI,CAAC,GAAG;MACjB,EAAE,OAAOC,KAAK,EAAE;QACdlB,SAAS,CAACkB,KAAK,CAACA,KAAK,CAACC,QAAQ,EAAEC,IAAI,EAAEF,KAAI,IAAK,MAAM;MACvD,UAAU;QACRT,OAAO,CAACM,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,OAAO;MACLT,SAAS;MACTI,KAAK;MACLD,OAAO;MACPK;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}