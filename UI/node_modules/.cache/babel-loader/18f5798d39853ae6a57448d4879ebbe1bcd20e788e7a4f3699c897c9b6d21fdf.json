{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { register } from '@/api';\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const registerFormRef = ref(null);\n    const registerForm = reactive({\n      username: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (registerForm.confirmPassword !== '') {\n          registerFormRef.value.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        validator: validatePass,\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能小于6位',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        validator: validatePass2,\n        trigger: 'blur'\n      }]\n    };\n    const handleRegister = async () => {\n      if (!registerFormRef.value) return;\n      await registerFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const {\n              confirmPassword,\n              ...registerData\n            } = registerForm;\n            await register(registerData);\n            ElMessage.success('注册成功');\n            router.push('/login');\n          } catch (error) {\n            ElMessage.error(error.message || '注册失败');\n          }\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      registerFormRef,\n      registerForm,\n      validatePass,\n      validatePass2,\n      rules,\n      handleRegister,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get User() {\n        return User;\n      },\n      get Lock() {\n        return Lock;\n      },\n      get register() {\n        return register;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","User","Lock","register","router","registerFormRef","registerForm","username","password","confirmPassword","validatePass","rule","value","callback","Error","validateField","validatePass2","rules","required","message","trigger","min","max","validator","handleRegister","validate","valid","registerData","success","push","error"],"sources":["C:/Users/35026/IdeaProjects/SpringVue/UI/src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <el-card class=\"register-card\">\r\n      <template #header>\r\n        <h2>注册</h2>\r\n      </template>\r\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerFormRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\" placeholder=\"用户名\">\r\n            <template #prefix>\r\n              <el-icon><User /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"registerForm.password\" type=\"password\" placeholder=\"密码\">\r\n            <template #prefix>\r\n              <el-icon><Lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirmPassword\">\r\n          <el-input v-model=\"registerForm.confirmPassword\" type=\"password\" placeholder=\"确认密码\">\r\n            <template #prefix>\r\n              <el-icon><Lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleRegister\" style=\"width: 100%\">注册</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"text\" @click=\"$router.push('/login')\">已有账号？立即登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { User, Lock } from '@element-plus/icons-vue'\r\nimport { register } from '@/api'\r\n\r\nconst router = useRouter()\r\nconst registerFormRef = ref(null)\r\n\r\nconst registerForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst validatePass = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('请输入密码'))\r\n  } else {\r\n    if (registerForm.confirmPassword !== '') {\r\n      registerFormRef.value.validateField('confirmPassword')\r\n    }\r\n    callback()\r\n  }\r\n}\r\n\r\nconst validatePass2 = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('请再次输入密码'))\r\n  } else if (value !== registerForm.password) {\r\n    callback(new Error('两次输入密码不一致!'))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, validator: validatePass, trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n  ],\r\n  confirmPassword: [\r\n    { required: true, validator: validatePass2, trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleRegister = async () => {\r\n  if (!registerFormRef.value) return\r\n  \r\n  await registerFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const { confirmPassword, ...registerData } = registerForm\r\n        await register(registerData)\r\n        ElMessage.success('注册成功')\r\n        router.push('/login')\r\n      } catch (error) {\r\n        ElMessage.error(error.message || '注册失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.register-card {\r\n  width: 400px;\r\n}\r\n\r\n.register-card :deep(.el-card__header) {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.register-card h2 {\r\n  margin: 0;\r\n  color: #409EFF;\r\n}\r\n</style> "],"mappings":";AAwCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,IAAI,EAAEC,IAAI,QAAQ,yBAAyB;AACpD,SAASC,QAAQ,QAAQ,OAAO;;;;;;;IAEhC,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;IAC1B,MAAMM,eAAe,GAAGR,GAAG,CAAC,IAAI,CAAC;IAEjC,MAAMS,YAAY,GAAGR,QAAQ,CAAC;MAC5BS,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC9C,IAAID,KAAK,KAAK,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;MAC9B,CAAC,MAAM;QACL,IAAIR,YAAY,CAACG,eAAe,KAAK,EAAE,EAAE;UACvCJ,eAAe,CAACO,KAAK,CAACG,aAAa,CAAC,iBAAiB,CAAC;QACxD;QACAF,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IAED,MAAMG,aAAa,GAAGA,CAACL,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC/C,IAAID,KAAK,KAAK,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAChC,CAAC,MAAM,IAAIF,KAAK,KAAKN,YAAY,CAACE,QAAQ,EAAE;QAC1CK,QAAQ,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC,CAAC;MACnC,CAAC,MAAM;QACLD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IAED,MAAMI,KAAK,GAAG;MACZV,QAAQ,EAAE,CACR;QAAEW,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,CAAC,CAChE;MACDZ,QAAQ,EAAE,CACR;QAAEU,QAAQ,EAAE,IAAI;QAAEK,SAAS,EAAEb,YAAY;QAAEU,OAAO,EAAE;MAAO,CAAC,EAC5D;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,CAAC,CACnD;MACDX,eAAe,EAAE,CACf;QAAES,QAAQ,EAAE,IAAI;QAAEK,SAAS,EAAEP,aAAa;QAAEI,OAAO,EAAE;MAAO,CAAC;IAEjE,CAAC;IAED,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACnB,eAAe,CAACO,KAAK,EAAE;MAE5B,MAAMP,eAAe,CAACO,KAAK,CAACa,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACpD,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAM;cAAEjB,eAAe;cAAE,GAAGkB;YAAa,CAAC,GAAGrB,YAAY;YACzD,MAAMH,QAAQ,CAACwB,YAAY,CAAC;YAC5B3B,SAAS,CAAC4B,OAAO,CAAC,MAAM,CAAC;YACzBxB,MAAM,CAACyB,IAAI,CAAC,QAAQ,CAAC;UACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;YACd9B,SAAS,CAAC8B,KAAK,CAACA,KAAK,CAACX,OAAO,IAAI,MAAM,CAAC;UAC1C;QACF;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}